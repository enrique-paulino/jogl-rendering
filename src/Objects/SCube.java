package Objects;

public class SCube extends SObject{
    private float size;
    public SCube() {
        super();
        this.size = 1;
        update();
    }
    public SCube(float size) {
        super();
        this.size = size;
        update();
    }

    @Override
    protected void genData() {



        // Points of a cube = (6 Faces * 4 Vertices (per face))
        // Points of a cube = 24 → Each point has an XYZ Value
        numVertices = 24;
        size = size / 2f;
        vertices = new float[] {

                // Front Face
                -size, size, -size,
                size, size, -size,
                size, size, size,
                -size, size, size,

                // Top Face
                -size, -size, size,
                -size, size, size,
                size, size, size,
                size, -size, size,

                // Back Face
                -size, -size, -size,
                -size, -size, size,
                size, -size, size,
                size, -size, -size,

                // Bottom Face
                -size, -size, -size,
                -size, size, -size,
                size, size, -size,
                size, -size, -size,

                // Right Face
                -size, -size, -size,
                -size, size, -size,
                -size, size, size,
                -size, -size, size,

                // Left Face
                size, -size, -size,
                size, size, -size,
                size, size, size,
                size, -size, size,
        };

        // The normals are being generated by each vertex on each face
        // We assume that X increases as we go right, Y increases as we
        // go up, and Z increases as we go forward.
        // Left/Right face → X
        // Bottom/Top face → Y
        // Front/Back face → Z
        normals = new float[] {

                // Front Face
                0, 0, 1,
                0, 0, 1,
                0, 0, 1,
                0, 0, 1,

                // Top Face
                0, 1, 0,
                0, 1, 0,
                0, 1, 0,
                0, 1, 0,

                // Back Face
                0, 0, -1,
                0, 0, -1,
                0, 0, -1,
                0, 0, -1,

                // Bottom Face
                0, -1, 0,
                0, -1, 0,
                0, -1, 0,
                0, -1, 0,

                // Right Face
                1, 0, 0,
                1, 0, 0,
                1, 0, 0,
                1, 0, 0,

                // Left Face
                -1, 0, 0,
                -1, 0, 0,
                -1, 0, 0,
                -1, 0, 0,
        };

        // Mainly trial-and-error until the textures showed the whole image
        // I thought that the textures had to be oriented a certain way
        // because of the picture in the pro forma, I was wrong, but they
        // look visually appealing.
        textures = new float[] {
                // Top Face
                0, 1,
                1, 1,
                1, 0,
                0, 0,

                // Back Face
                0, 0,
                0, 1,
                1, 1,
                1, 0,

                // Bottom Face
                0, 0,
                0, 1,
                1, 1,
                1, 0,

                // Front Face
                0, 1,
                0, 0,
                1, 0,
                1, 1,

                // Left Face
                0, 1,
                0, 0,
                1, 0,
                1, 1,

                // Right Face
                1, 1,
                1, 0,
                0, 0,
                0, 1,
        };

        // Each index is referencing vertex points to make a triangle
        // Each Face = 2 Triangles
        // 2 Triangles * 3 Points = 6 Points
        // 6 Faces * 6 Points = 36 indices
        numIndices = 36;

        // The first line of each block is the first triangle of that face
        // and the second line is the second triangle of that face
        indices = new int[] {
                // Front Face
                0, 1, 2,
                2, 3, 0,

                // Top Face
                4, 5, 6,
                6, 7, 4,

                // Back Face
                8, 9, 10,
                10, 11, 8,

                // Bottom Face
                13, 12, 14,
                15, 14, 12,

                // Right Face
                16, 17, 18,
                18, 19, 16,

                // Left Face
                21, 20, 22,
                23, 22, 20
        };



    }

    public void setSize(float size) {
        this.size = size;
        updated = false;
    }
    public float getSize() {
        return size;
    }
}
